// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ngo_webapp.Models.Entities;

#nullable disable

namespace ngo_webapp.Migrations
{
    [DbContext(typeof(NgoManagementContext))]
    partial class NgoManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ngo_webapp.Models.Entities.Appeal", b =>
                {
                    b.Property<int>("AppealsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AppealsID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppealsId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("AppealsImage")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Appeals_Image");

                    b.Property<string>("AppealsName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Organization")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("AppealsId")
                        .HasName("PK__Appeals__5E813B30A8132DFC");

                    b.HasIndex(new[] { "AppealsName" }, "UC_Appeals_AppealsName")
                        .IsUnique();

                    b.ToTable("Appeals");
                });

            modelBuilder.Entity("ngo_webapp.Models.Entities.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BlogID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogId"));

                    b.Property<int>("AppealId")
                        .HasColumnType("int")
                        .HasColumnName("AppealID");

                    b.Property<string>("Content")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("BlogId")
                        .HasName("PK__Blogs__54379E50C6BFD400");

                    b.HasIndex("AppealId");

                    b.HasIndex("UserId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("ngo_webapp.Models.Entities.Donation", b =>
                {
                    b.Property<int>("DonationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DonationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DonationId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("AppealsId")
                        .HasColumnType("int")
                        .HasColumnName("AppealsID");

                    b.Property<DateTime>("DonationDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("DonationId")
                        .HasName("PK__Donation__C5082EDB745B0277");

                    b.HasIndex("AppealsId");

                    b.HasIndex("UserId");

                    b.ToTable("Donations");
                });

            modelBuilder.Entity("ngo_webapp.Models.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("GoogleHash")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Google_Hash");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Admin");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserImage")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("User_Image");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCAC6A9A6DB9");

                    b.HasIndex(new[] { "Email" }, "UC_Users_Email")
                        .IsUnique();

                    b.HasIndex(new[] { "Username" }, "UC_Users_Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ngo_webapp.Models.Entities.Blog", b =>
                {
                    b.HasOne("ngo_webapp.Models.Entities.Appeal", "Appeal")
                        .WithMany("Blogs")
                        .HasForeignKey("AppealId")
                        .IsRequired()
                        .HasConstraintName("FK_Blogs_Appeals");

                    b.HasOne("ngo_webapp.Models.Entities.User", "User")
                        .WithMany("Blogs")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Blogs_Users");

                    b.Navigation("Appeal");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ngo_webapp.Models.Entities.Donation", b =>
                {
                    b.HasOne("ngo_webapp.Models.Entities.Appeal", "Appeals")
                        .WithMany("Donations")
                        .HasForeignKey("AppealsId")
                        .HasConstraintName("FK_Donations_Appeals");

                    b.HasOne("ngo_webapp.Models.Entities.User", "User")
                        .WithMany("Donations")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Donations_Users");

                    b.Navigation("Appeals");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ngo_webapp.Models.Entities.Appeal", b =>
                {
                    b.Navigation("Blogs");

                    b.Navigation("Donations");
                });

            modelBuilder.Entity("ngo_webapp.Models.Entities.User", b =>
                {
                    b.Navigation("Blogs");

                    b.Navigation("Donations");
                });
#pragma warning restore 612, 618
        }
    }
}
